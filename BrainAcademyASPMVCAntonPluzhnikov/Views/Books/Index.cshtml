@model IEnumerable<DataObjectsLayer.Models.Book>
@{
    ViewBag.Title = "Library";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Library</h2>
<p>
    <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Create New", "Create")</button>
    <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Clear cache", "IndexRemoveCache")</button>
    <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Go to authors", "Index", "Authors")</button>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ISBN)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ISBN)
            </td>
            <td>                
                <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Edit", "Edit", new { id = item.Id })</button>
                <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Details", "Details", new { id = item.Id })</button>
                <button type="button" class="btn btn-primary btn-lg">@Html.ActionLink("Delete", "Delete", new { id = item.Id })</button>
                <button type="button" class="btn btn-primary btn-lg">
                    <a href="javascript:void(0);" class="chart-btn"
                       data-myid="@item.Id">
                        Draw chart
                    </a>
                </button>
            </td>
        </tr>
        <div id="chart_div">
        </div>
    }
</table>
@section Scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { packages: ['corechart', 'line'] });
        google.charts.setOnLoadCallback(drawBackgroundColor);
        function drawBackgroundColor(id) {
            var options = {
                hAxis: {
                    title: 'Date'
                },
                vAxis: {
                    title: 'Count'
                },
                backgroundColor: '#f1f8e9'
            };
            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            if (typeof (id) === "undefined") {
                var data = new google.visualization.DataTable([]);
                chart.draw(data, options);
            } else {
                $.ajax({
                    url: "/api/charts/hits/" + id,
                    content: "application/json",
                    beforesend: function () {
                        $.blockUI({
                            message: "Loading data"
                        });
                    },
                    success: function (data) {
                        var dataJson = new google.visualization.DataTable(data);
                        chart.draw(dataJson, options);
                    },
                    error: function () {
                        alert(':(');
                    },
                    complete: function () {
                        $.unblockUI();
                    },
                    async: false
                }).responseText;
            }
        }

        $(document).ready(function () {
            $('a.chart-btn').click(function () {
                var id = $(this).data('myid');
                drawBackgroundColor(id)
            })
        });
    </script>
}
